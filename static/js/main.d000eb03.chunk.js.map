{"version":3,"sources":["App.js","containers/Home.js","containers/About.js","containers/404.js","components/Header.js","components/Footer.js","images/fullstack.svg","serviceWorker.js","index.js"],"names":["App","basename","className","path","exact","component","Home","About","NoRouteMatch","Component","hot","module","SubMenu","Header","Content","Sider","src","require","alt","theme","mode","defaultSelectedKeys","style","lineHeight","Item","key","width","background","defaultOpenKeys","height","borderRight","title","type","padding","margin","minHeight","afterChange","a","b","c","console","log","useState","visible","setVisible","to","onClick","onOk","e","onCancel","Is404","exports","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d000eb03.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport {hot} from 'react-hot-loader';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Home from './containers/Home';\nimport About from './containers/About';\nimport NoRouteMatch from './containers/404';\n\nimport './App.css';\nimport './stylesheets/main.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <div className=\"App\">\n          {/* <Header /> */}\n\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route component={NoRouteMatch} />\n          </Switch>\n          {/* <Footer /> */}\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default hot(module)(App);\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {\n  Layout,\n  Breadcrumb,\n  Menu,\n  Icon,\n  Carousel,\n  Button,\n  DatePicker,\n} from 'antd';\n\nconst {SubMenu} = Menu;\nconst {Header, Content, Sider} = Layout;\n// const {MonthPicker, RangePicker, WeekPicker} = DatePicker;\n\n// const menu = (\n//   <Menu>\n//     <Menu.Item>\n//       <a\n//         target=\"_blank\"\n//         rel=\"noopener noreferrer\"\n//         href=\"http://www.alipay.com/\"\n//       >\n//         1st menu item\n//       </a>\n//     </Menu.Item>\n//     <Menu.Item>\n//       <a\n//         target=\"_blank\"\n//         rel=\"noopener noreferrer\"\n//         href=\"http://www.taobao.com/\"\n//       >\n//         2nd menu item\n//       </a>\n//     </Menu.Item>\n//     <Menu.Item>\n//       <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.tmall.com/\">\n//         3rd menu item\n//       </a>\n//     </Menu.Item>\n//   </Menu>\n// );\n\nconst Home = () => {\n  // const [collapsed, SetCollapsed] = useState(false);\n\n  // const toggleCollapsed = () => {\n  //   SetCollapsed(!collapsed);\n  // };\n\n  // function onChange(date, dateString) {\n  //   console.log(date, dateString);\n  // }\n\n  function onChange(a, b, c) {\n    console.log(a, b, c);\n  }\n\n  return (\n    <Layout>\n      <Header className=\"header\">\n        <div className=\"holder-logo\">\n          <img\n            className=\"logo\"\n            src={require('../images/fullstack.svg')}\n            alt=\"logo\"\n          />\n        </div>\n        <Menu\n          theme=\"light\"\n          className=\"header\"\n          mode=\"horizontal\"\n          defaultSelectedKeys={['2']}\n          style={{lineHeight: '64px'}}\n        >\n          <Menu.Item key=\"1\">Home</Menu.Item>\n          <Menu.Item key=\"2\">About</Menu.Item>\n          <Menu.Item key=\"3\">Contact Us</Menu.Item>\n        </Menu>\n      </Header>\n      <Layout>\n        <Sider width={200} style={{background: '#fff'}}>\n          <Menu\n            theme=\"dark\"\n            mode=\"inline\"\n            defaultSelectedKeys={['1']}\n            defaultOpenKeys={['sub1']}\n            style={{height: '100%', borderRight: 0}}\n          >\n            <SubMenu\n              key=\"sub1\"\n              title={\n                <span>\n                  <Icon type=\"user\" />\n                  subnav 1\n                </span>\n              }\n            >\n              <Menu.Item key=\"1\">option1</Menu.Item>\n              <Menu.Item key=\"2\">option2</Menu.Item>\n              <Menu.Item key=\"3\">option3</Menu.Item>\n              <Menu.Item key=\"4\">option4</Menu.Item>\n            </SubMenu>\n            <SubMenu\n              key=\"sub2\"\n              title={\n                <span>\n                  <Icon type=\"laptop\" />\n                  subnav 2\n                </span>\n              }\n            >\n              <Menu.Item key=\"5\">option5</Menu.Item>\n              <Menu.Item key=\"6\">option6</Menu.Item>\n              <Menu.Item key=\"7\">option7</Menu.Item>\n              <Menu.Item key=\"8\">option8</Menu.Item>\n            </SubMenu>\n            <SubMenu\n              key=\"sub3\"\n              title={\n                <span>\n                  <Icon type=\"notification\" />\n                  subnav 3\n                </span>\n              }\n            >\n              <Menu.Item key=\"9\">option9</Menu.Item>\n              <Menu.Item key=\"10\">option10</Menu.Item>\n              <Menu.Item key=\"11\">option11</Menu.Item>\n              <Menu.Item key=\"12\">option12</Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Sider>\n\n        <Layout style={{padding: '0 24px 24px'}}>\n          <Breadcrumb style={{margin: '16px 0'}}>\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\n            <Breadcrumb.Item>List</Breadcrumb.Item>\n            <Breadcrumb.Item>App</Breadcrumb.Item>\n          </Breadcrumb>\n          <Content\n            style={{\n              background: '#fff',\n              padding: 24,\n              margin: 0,\n              height: '100%',\n              minHeight: 400,\n            }}\n          >\n            <Carousel afterChange={onChange} style={{height: '100%'}}>\n              <div className=\"container-slide\">\n                <h3>Slider 1</h3>\n              </div>\n              <div className=\"container-slide\">\n                <h3>Slider 2</h3>\n              </div>\n              <div className=\"container-slide\">\n                <h3>Slider 3</h3>\n              </div>\n              <div className=\"container-slide\">\n                <h3>Slider 4</h3>\n              </div>\n            </Carousel>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default Home;\n\n// <div className=\"\">\n/* <div>/home</div>\n      <h1>This is the Home page</h1>\n      <Link to=\"/about\">Go to About</Link>\n      <Dropdown overlay={menu}>\n        <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n          Hover me <Icon type=\"down\" />\n        </a>\n      </Dropdown> */\n\n/* <div style={{width: 256}}>\n        <Button\n          type=\"primary\"\n          onClick={toggleCollapsed}\n          style={{marginBottom: 16}}\n        >\n          <Icon type={collapsed ? 'menu-unfold' : 'menu-fold'} />\n        </Button>\n        <Menu\n          defaultSelectedKeys={['1']}\n          defaultOpenKeys={['sub1']}\n          mode=\"inline\"\n          theme=\"dark\"\n          inlineCollapsed={collapsed}\n        >\n          <Menu.Item key=\"1\">\n            <Icon type=\"pie-chart\" />\n            <span>Option 1</span>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Icon type=\"desktop\" />\n            <span>Option 2</span>\n          </Menu.Item>\n          <Menu.Item key=\"3\">\n            <Icon type=\"inbox\" />\n            <span>Option 3</span>\n          </Menu.Item>\n          <SubMenu\n            key=\"sub1\"\n            title={\n              <span>\n                <Icon type=\"mail\" />\n                <span>Navigation One</span>\n              </span>\n            }\n          >\n            <Menu.Item key=\"5\">Option 5</Menu.Item>\n            <Menu.Item key=\"6\">Option 6</Menu.Item>\n            <Menu.Item key=\"7\">Option 7</Menu.Item>\n            <Menu.Item key=\"8\">Option 8</Menu.Item>\n          </SubMenu>\n          <SubMenu\n            key=\"sub2\"\n            title={\n              <span>\n                <Icon type=\"appstore\" />\n                <span>Navigation Two</span>\n              </span>\n            }\n          >\n            <Menu.Item key=\"9\">Option 9</Menu.Item>\n            <Menu.Item key=\"10\">Option 10</Menu.Item>\n            <SubMenu key=\"sub3\" title=\"Submenu\">\n              <Menu.Item key=\"11\">Option 11</Menu.Item>\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\n            </SubMenu>\n          </SubMenu>\n        </Menu>\n      </div> */\n/* <div>\n        <RangePicker onChange={onChange} />\n      </div> */\n// </div>\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\n// import Button from \"antd/es/button\";\nimport {Button, Modal} from 'antd';\n\nconst About = () => {\n  const [visible, setVisible] = useState(false);\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = (e) => {\n    setVisible(false);\n  };\n\n  const handleCancel = (e) => {\n    setVisible(false);\n  };\n\n  return (\n    <div className=\"about\">\n      <div>/about</div>\n      <h1>This is the About page</h1>\n      <Link to=\"/\">Go to Home</Link>\n      <Button type=\"primary\">Primary</Button>\n      <Button>Default</Button>\n      <Button type=\"dashed\">Dashed</Button>\n      <Button type=\"danger\">Danger</Button>\n      <Button type=\"link\">Link</Button>\n      <div>\n        <Button className=\"test\" type=\"primary\" onClick={showModal}>\n          Open Modal\n        </Button>\n        <Modal\n          title=\"Basic Modal\"\n          visible={visible}\n          onOk={handleOk}\n          onCancel={handleCancel}\n        >\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst Is404 = () => {\n  return <div>404 page</div>;\n};\n\nexport default Is404;\n","import React from 'react';\n\nconst Header = () => {\n  return <header>Header</header>;\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () => {\n  return <footer>Footer</footer>;\n};\n\nexport default Footer;\n","module.exports = __webpack_public_path__ + \"static/media/fullstack.98ce4f96.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}